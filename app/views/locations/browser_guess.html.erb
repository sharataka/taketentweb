<% content_for :navigation do %>

  <% if @signed_in == true %>
      <!-- <li class="active"><%= link_to @username, profile_path %></li> -->
      <li><%= link_to @current_user['username'], profile_path %></li>
        <li><%= link_to 'Logout', user_logout_action_path %></li>
  <% else %>
    <li><%= link_to 'Sign up', user_signup_path %></li>
  <% end %>

<% end %>

<style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
        position: relative;
      }

      .submit-button{
        position: absolute; 
        bottom: 100px; 
        width: 80%;
        right: 0px;
      }
      .next-button{
      }
      .navbar-default{
        margin-bottom: 0px;
      }


      .image { 
         position: relative; 
         width: 100%; /* for IE 6 */
      }

      h2 { 
         position: absolute; 
         top: 0px; 
         left: 0; 
         width: 100%; 
      }

      h2 span { 
         color: white; 
         font: 24px/45px Helvetica, Sans-Serif; 
         letter-spacing: -1px;  
         background: rgb(0, 0, 0); /* fallback color */
         background: rgba(0, 0, 0, 0.7);
         padding: 10px; 
      }

</style>

<script>

var map;
var markers = [];
var guessCoordinates;
var lat;
var lng;

function initMap() {

  // Change height of map div
  var height = window.innerHeight;
  document.getElementById('map').style.height = height + 'px';

  // Set width of submit button
  var width = window.innerWidth;
  var scroll_bar_width = getScrollbarWidth();
  width = width - scroll_bar_width;
  document.getElementById('guessButton').style.width = (width - 50) + 'px';
  document.getElementById("guessButton").style.right = "25px";
  document.getElementById("guessButton").style.left = "25px";

  var haightAshbury = {lat: 37.769, lng: -122.446};

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 3,
    center: haightAshbury,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    disableDefaultUI: true
  });

  // This event listener will call addMarker() when the map is clicked.
  map.addListener('click', function(event) {
    addMarker(event.latLng);
    lat = event.latLng.lat();
    lng = event.latLng.lng()
  });

}

// Adds a marker to the map and push to the array.
function addMarker(location) {
  deleteMarkers()
  var marker = new google.maps.Marker({
    position: location,
    animation: google.maps.Animation.DROP,
    map: map
  });
  markers.push(marker);
}

// Sets the map on all markers in the array.
function setMapOnAll(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setMapOnAll(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setMapOnAll(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

function nextLocation(){
  window.location.href = '/';
}

function getScrollbarWidth() {
    var outer = document.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.width = "100px";
    outer.style.msOverflowStyle = "scrollbar"; // needed for WinJS apps

    document.body.appendChild(outer);

    var widthNoScroll = outer.offsetWidth;
    // force scrollbars
    outer.style.overflow = "scroll";

    // add innerdiv
    var inner = document.createElement("div");
    inner.style.width = "100%";
    outer.appendChild(inner);        

    var widthWithScroll = inner.offsetWidth;

    // remove divs
    outer.parentNode.removeChild(outer);

    return widthNoScroll - widthWithScroll;

}
function makeGuess(){
  if (lat == undefined) {
    alert('Guess by tapping on the map!');
  }
  else {
    localStorage.setItem('lat', lat);
    localStorage.setItem('lng', lng);

    // Go to new page
    // window.location.href = '/result_page/location/objectId/';
    
    // Reduce height of map div
    var height = window.innerHeight;
    var new_height = height / 2;
    document.getElementById('map').style.height = new_height + 'px';

    // var width = window.innerWidth;
    // var new_width = width / 2;
    // document.getElementById('map').style.width = new_width + 'px';

    google.maps.event.trigger(map, 'resize');

    // Define coordinate objects
    var objectId_hidden = document.getElementById('objectId').value;
    var answer_hidden = document.getElementById('answer').value;
    var all_scores = document.getElementById('all_scores').value;
    var lat_hidden = document.getElementById('lat');
    var long_hidden = document.getElementById('long');
    var actualCoordinates = {lat: Number(lat_hidden.value), lng: Number(long_hidden.value)};
    var guessCoordinates = {lat: lat, lng:lng};

    // Add the other pin
    var marker = new google.maps.Marker({
      position: actualCoordinates,
      animation: google.maps.Animation.DROP,
      map: map
    });
    markers.push(marker);

    //Remove button
    var elem = document.getElementById("guessButton");
    elem.parentNode.removeChild(elem);

    // Add circle overlay to map
      var circle = new google.maps.Circle({
        map: map,
        center: actualCoordinates,
        radius: 500000,  //500km away
        strokeColor:"#0000FF",
        strokeOpacity:0.8,
        strokeWeight:2,
        fillColor:"#0000FF",
        fillOpacity:0.4
      });

    // Add line between points
    var flightPlanCoordinates = [guessCoordinates, actualCoordinates];
    var flightPath = new google.maps.Polyline({
      path: flightPlanCoordinates,
      geodesic: false,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2
    });
    flightPath.setMap(map);

    //Calc distance between 2 points
    var guessCoordinatesObject = new google.maps.LatLng(lat, lng);
    var actualCoordinatesObject = new google.maps.LatLng(actualCoordinates.lat, actualCoordinates.lng);
    var round_status = '';

    var distance_number = google.maps.geometry.spherical.computeDistanceBetween(guessCoordinatesObject, actualCoordinatesObject) / 1000;

    // Determine whether answer is correct
    if (distance_number<501) {
      round_status = "Correct"
    } else {
      round_status = "Incorrect"
    }

    // Convert distance without decimals
    distance = distance_number.toFixed(0);

    //Format number with comma
    distanceWithCommas =  distance.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

    // Pan map
    map.panTo(guessCoordinatesObject);

    // Zoom map
    if (round_status == 'Incorrect') {
      map.setZoom(3);
    }

    // Remove tap even listener
    google.maps.event.clearListeners(map, 'click');

    // Make hidden content visible
    var hidden_content = document.getElementById('hidden_content');
    hidden_content.style.visibility = 'visible';

    // Update result of round text
    var result_text = document.getElementById('result_text');
    result_text.innerHTML = round_status +'! ' + distanceWithCommas+'km away';

    // Update round answer text
    var answer_text = document.getElementById('updated_answer');
    answer_text.innerHTML = answer_hidden;
  
    // CALC STATS

        // Convert string of other results to array
        all_scores = JSON.parse("[" + all_scores + "]");

        // Add the current score to the array
        all_scores.push(Number(distance));
        
        // Sort results in ascending order
        all_scores.sort(function(a, b){return a-b});

        //Get rank/place of guess
        var rank = all_scores.indexOf(Number(distance)) + 1;
        function ordinal_suffix_of(i) {
          var j = i % 10,
              k = i % 100;
          if (j == 1 && k != 11) {
              return i + "st";
          }
          if (j == 2 && k != 12) {
              return i + "nd";
          }
          if (j == 3 && k != 13) {
              return i + "rd";
          }
          return i + "th";
        }

        rank = ordinal_suffix_of(rank);

        // Best guess and number of guesses
        var best_guess = all_scores[0];
        var number_of_guesses = all_scores.length
        
        // Avg guess
        var index_of_median = number_of_guesses / 2;
        if (number_of_guesses % 2 == 0) {
          var avg_guess = (all_scores[index_of_median - 1] + all_scores[index_of_median] ) / 2;
        }
        else {
          var avg_guess = all_scores[index_of_median - 0.5];
        }

    // END OF STATS

    // Update ranking text
    var rank_text = document.getElementById('rank');
    rank_text.innerHTML =  '<h3 style = "color: #428bca"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>&nbsp;' + rank + ' place</h3> out of ' + number_of_guesses + ' players';

    // Save result
    var xhttp = new XMLHttpRequest();
    var url_string = "/result_page/location/"+objectId_hidden+"/distance/" + distance;
    xhttp.open("GET", url_string, true);
    xhttp.send();

  }



}

</script>

<input id = "objectId" type="hidden" name="objectId" value="<%= @objectId %>">
<input id = "answer" type="hidden" name="answer" value="<%= @answer %>">
<input id = "lat" type="hidden" name="lat" value="<%= @lat %>">
<input id = "long" type="hidden" name="long" value="<%= @long %>">
<input id = "imageLink" type="hidden" name="imageLink" value="<%= @imageLink %>">
<input id = "all_scores" type="hidden" name="all_scores" value="<%= @all_scores %>">

<div id="map"></div>
<button id = "guessButton" type="button" class="btn btn-primary btn-lg submit-button" onclick = "makeGuess()"><span class="glyphicon glyphicon-map-marker" aria-hidden="true"></span> Guess </button>




<div class = "container-fluid" id = "hidden_content" style = "visibility: hidden;">

<hr width="50%" id = "hr">
  <h3>
    <center>
      
      <!-- Status -->
      <div id = "result_text">
        Correct! 4500km away
      </div>

      <!-- Answer -->
        <div class = "row">
            <div>
              <h4 id = "updated_answer">
                This is the answer.
              </h4>
            </div>
        </div>


      

      <!-- Rank -->
        <div class = "row">
            <div>
              <h4 id = "rank">
                <span class="glyphicon glyphicon-user" aria-hidden="true" style = "color: #428bca"></span>&nbsp;1st place out of 7 players
              </h4>
            </div>
        </div>

      <!-- Show well if not signed in -->
      <% if @signed_in == false %>
      <div class = "row">
        <div class = "col-md-6 col-md-offset-3">
          <div class="well well-sm info">
            <center>
              <h5>
                <span class="glyphicon glyphicon-picture" aria-hidden="true" style = "color: #428bca"></span> Get more pictures, save progress, and compete against friends.
                <a href = "/user/signup">
                  Sign up here!
                </a>
              </h5>
            </center>
          </div>
        </div>
      </div>
      <% end %>
      <!-- End of well -->

      <!-- Show well if already played this location -->
      <% if @already_played == true %>
      <div class = "row">
        <div class = "col-md-6 col-md-offset-3">
          <div class="well well-sm info">
            <center>
              <h5>
                <span class="glyphicon glyphicon-picture" aria-hidden="true" style = "color: #428bca"></span> You've already played this picture, so I'm not saving this result.
              </h5>
            </center>
          </div>
        </div>
      </div>
      <% end %>
      <!-- End of well -->

    </center>
  </h3>



  <div class = "row">

    <!-- Re-show image -->
    <div class="col-md-12">
      <center>
        <div class = "image">
          <img src = "<%= @imageLink %>" id ="hidden_image" class = "img-responsive">
        </div>
      </center>
    </div>

  </div>

<hr width="50%" id = "hr">

<div class = "row" style = "margin-bottom: 20px;">
  <center>
    <button id = "nextButton" type="button" class="btn btn-primary btn-lg next-button" onclick = "nextLocation()">Next picture <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span></button>
  </center>
</div>

<!-- Google footer ad -->
<%= render 'footeradtemplate' %>


</div>

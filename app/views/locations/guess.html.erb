<style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
        position: relative;
      }
      .back-button{
      	position: absolute; 
   		bottom: 100px;
   		width:30%;
      }
      .submit-button{
      position: absolute; 
   		bottom: 100px; 
   		width: 100%;
   		right: 0px;
      }
      .navbar-default{
      	margin-bottom: 0px;
      }
</style>

<script>

var map;
var markers = [];
var guessCoordinates;
var lat;
var lng;

function initMap() {

  var height = window.innerHeight;
  document.getElementById('map').style.height = height + 'px';

  var haightAshbury = {lat: 37.769, lng: -122.446};

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 3,
    center: haightAshbury,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  // This event listener will call addMarker() when the map is clicked.
  map.addListener('click', function(event) {
    addMarker(event.latLng);
    lat = event.latLng.lat();
    lng = event.latLng.lng()
  });

}

// Adds a marker to the map and push to the array.
function addMarker(location) {
  deleteMarkers()
  var marker = new google.maps.Marker({
    position: location,
    animation: google.maps.Animation.DROP,
    map: map
  });
  markers.push(marker);
}

// Sets the map on all markers in the array.
function setMapOnAll(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setMapOnAll(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setMapOnAll(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

function makeGuess(){
  if (lat == undefined) {
    alert('Make a guess by tapping on the map!');
  }
  else {
    localStorage.setItem('lat', lat);
    localStorage.setItem('lng', lng);

    // Go to new page
    // window.location.href = '/result_page/location/objectId/';
    
    // Reduce height of map div
    var height = window.innerHeight;
    var new_height = height / 2;
    document.getElementById('map').style.height = new_height + 'px';
    google.maps.event.trigger(map, 'resize');

    // Define coordinate objects
    var actualCoordinates = {lat: 37.769, lng: -122.446};
    var guessCoordinates = {lat: lat, lng:lng};

    // Add the other pin
    var marker = new google.maps.Marker({
      position: actualCoordinates,
      animation: google.maps.Animation.DROP,
      map: map
    });
    markers.push(marker);

    //Remove button
    var elem = document.getElementById("guessButton");
    elem.parentNode.removeChild(elem);

    // Add circle overlay to map
      var circle = new google.maps.Circle({
        map: map,
        center: actualCoordinates,
        radius: 500000,  //500km away
        strokeColor:"#0000FF",
        strokeOpacity:0.8,
        strokeWeight:2,
        fillColor:"#0000FF",
        fillOpacity:0.4
      });

    // Add line between points
    var flightPlanCoordinates = [guessCoordinates, actualCoordinates];
    var flightPath = new google.maps.Polyline({
      path: flightPlanCoordinates,
      geodesic: true,
      strokeColor: '#FF0000',
      strokeOpacity: 1.0,
      strokeWeight: 2
    });
    flightPath.setMap(map);

    //Calc distance between 2 points
    var guessCoordinatesObject = new google.maps.LatLng(lat, lng);
    var actualCoordinatesObject = new google.maps.LatLng(actualCoordinates.lat, actualCoordinates.lng);
    var round_status = '';

    var distance_number = google.maps.geometry.spherical.computeDistanceBetween(guessCoordinatesObject, actualCoordinatesObject) / 1000;

    // Determine whether answer is correct
    if (distance_number<501) {
      round_status = "Correct"
    } else {
      round_status = "Incorrect"
    }

    // Convert distance without decimals
    distance = distance_number.toFixed(0);

    //Format number with comma
    distanceWithCommas =  distance.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

    // Pan map
    map.panTo(guessCoordinatesObject);

    // Zoom map
    if (round_status == 'Incorrect') {
      map.setZoom(4);
    }

    // Remove tap even listener
    google.maps.event.clearListeners(map, 'click');

    //Append HTML to DOM
    var d1 = document.getElementById('map');
    d1.insertAdjacentHTML('afterend', '<div class = "image"><img src = "https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s640x640/sh0.08/e35/11336022_1688167831416163_947066833_n.jpg" class="img-responsive"><h2><span>'+round_status+'! '+distanceWithCommas+'km away</span></h2></div>');

    // <div style = "position:relative;">
    //   <img src = "https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s640x640/sh0.08/e35/11336022_1688167831416163_947066833_n.jpg" class="img-responsive">
    // </div>
    


  }



}

</script>


<div id="map"></div>
<!-- <a href = "/"><button type="button" class="btn btn-default btn-lg back-button" href = "result_page">Back</button></a> -->
<button id = "guessButton" type="button" class="btn btn-primary btn-lg submit-button" onclick = "makeGuess()">Submit</button>
